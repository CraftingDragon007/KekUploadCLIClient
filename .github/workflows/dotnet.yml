name: .NET CI

on:
  push:
    # Pattern matched against refs/tags
    branches: master
      
jobs:
  buildLinux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet publish -c release -r linux-x64 -p:PublishSingleFile=true --self-contained false
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: KekUploadCLIClient_Linux # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: KekUploadCLIClient/bin/Release/net6.0/linux-x64/publish/KekUploadCLIClient
        # The desired behavior if no files are found using the provided path.
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}
    - name: Create Release
      # You may pin to the exact commit or the version.
      # uses: ncipollo/release-action@40bb172bd05f266cf9ba4ff965cb61e9ee5f6d01
      uses: ncipollo/release-action@v1.9.0
      with:
        # An optional flag which indicates if we should update a release if it already exists. Defaults to false.
        allowUpdates: true # optional, default is 
        # An optional flag which indicates if artifact read or upload errors should fail the build.
        #artifactErrorsFailBuild: # optional, default is 
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        #artifact: # optional, default is 
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        #artifacts: # optional, default is 
        # The content type of the artifact. Defaults to raw
        #artifactContentType: # optional, default is 
        # An optional body for the release.
        #body: # optional, default is 
        # An optional body file for the release. This should be the path to the file
        #bodyFile: # optional, default is 
        # An optional commit reference. This will be used to create the tag if it does not exist.
        commit: ${{ steps.vars.outputs.sha_short }} # optional, default is 
        # When provided this will generate a discussion of the specified category. The category must exist otherwise this will cause the action to fail. This isn't used with draft releases
        #discussionCategory: # optional, default is 
        # Optionally marks this release as a draft release. Set to true to enable.
        #draft: # optional, default is 
        # Indicates if release notes should be automatically generated.
        generateReleaseNotes: true # optional, default is false
        # An optional name for the release. If this is omitted the tag will be used.
        #name: # optional, default is 
        # Indicates if the release body should be omitted.
        #omitBody: # optional, default is false
        # Indicates if the release body should be omitted during updates. The body will still be applied for newly created releases. This will preserve the existing body during updates.
        #omitBodyDuringUpdate: # optional, default is false
        # Indicates if the release name should be omitted.
        #omitName: # optional, default is false
        # Indicates if the release name should be omitted during updates. The name will still be applied for newly created releases. This will preserve the existing name during updates.
        #omitNameDuringUpdate: # optional, default is false
        # Indicates if the prerelease flag should be omitted during updates. The prerelease flag will still be applied for newly created releases. This will preserve the existing prerelease state during updates.
        #omitPrereleaseDuringUpdate: # optional, default is false
        # Optionally specify the owner of the repo where the release should be generated. Defaults to current repo's owner.
        #owner: # optional, default is 
        # Optionally marks this release as prerelease. Set to true to enable.
        prerelease: true # optional, default is 
        # Indicates if existing release artifacts should be removed, Defaults to false.
        #removeArtifacts: # optional, default is false
        # Indicates if existing release artifacts should be replaced. Defaults to true.
        #replacesArtifacts: # optional, default is true
        # Optionally specify the repo where the release should be generated. Defaults to current repo
        #repo: # optional, default is 
        # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
        tag: ${{ github.job }}_${{ steps.vars.outputs.sha_short }} # optional, default is 
        # The Github token.
        #token: # optional, default is ${{ github.token }}
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: KekUploadCLIClient/bin/Release/net6.0/linux-x64/publish/KekUploadCLIClient
        asset_name: KekUploadCLIClient-linux-amd64
        tag: ${{ github.job }}_${{ steps.vars.outputs.sha_short }}
        
  buildWindows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet publish -c release -r win-x64 -p:PublishSingleFile=true --self-contained false
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: KekUploadCLIClient_Windows # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: KekUploadCLIClient/bin/release/net6.0/win-x64/publish/KekUploadCLIClient.exe
        # The desired behavior if no files are found using the provided path.
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}
      
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: KekUploadCLIClient/bin/Release/net6.0/win-x64/publish/KekUploadCLIClient.exe
        asset_name: KekUploadCLIClient-windows-amd64.exe
        tag: ${{ github.job }}_${{ steps.vars.outputs.sha_short }}
        
  buildMacOs:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet publish -c release -r osx-x64 -p:PublishSingleFile=true --self-contained false      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: KekUploadCLIClient_MacOs # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: KekUploadCLIClient/bin/Release/net6.0/osx-x64/publish/KekUploadCLIClient
        # The desired behavior if no files are found using the provided path.
        
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}
      
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: KekUploadCLIClient/bin/Release/net6.0/osx-x64/publish/KekUploadCLIClient
        asset_name: KekUploadCLIClient-macos-amd64
        tag: ${{ github.job }}_${{ steps.vars.outputs.sha_short }}
